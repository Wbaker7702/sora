name: Update Documentation

on:
  push:
    branches: [main, develop]
    paths:
      - 'docs/**'
      - 'package.json'
      - 'README.md'
      - 'scripts/**'
  pull_request:
    branches: [main]
    paths:
      - 'docs/**'
      - 'package.json'
      - 'README.md'
      - 'scripts/**'
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  # Update API Documentation
  update-api-docs:
    name: Update API Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate API documentation
        run: |
          # Generate TypeScript API docs
          npx typedoc --out docs/api --entryPoints main/background.ts renderer/lib/commands.ts
          
          # Generate component documentation
          npx storybook build --output-dir docs/storybook
          
          # Generate command reference
          node scripts/generate-command-docs.js

      - name: Commit API documentation
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/api/ docs/storybook/ docs/commands/
          git diff --staged --quiet || git commit -m "docs: update API documentation [automated]"
          git push

  # Update Build Documentation
  update-build-docs:
    name: Update Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate build documentation
        run: |
          # Extract build commands from package.json
          node scripts/generate-build-docs.js
          
          # Generate platform-specific build guides
          node scripts/generate-platform-docs.js
          
          # Update troubleshooting guide
          node scripts/update-troubleshooting.js

      - name: Commit build documentation
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/docs/development/ docs/docs/troubleshooting/
          git diff --staged --quiet || git commit -m "docs: update build documentation [automated]"
          git push

  # Update Changelog
  update-changelog:
    name: Update Changelog
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Generate changelog
        run: |
          # Generate changelog from git commits
          npx conventional-changelog -p angular -i CHANGELOG.md -s
          
          # Generate release notes
          node scripts/generate-release-notes.js

      - name: Commit changelog
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md docs/releases/
          git diff --staged --quiet || git commit -m "docs: update changelog [automated]"
          git push

  # Update README
  update-readme:
    name: Update README
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update README
        run: |
          # Update version in README
          node scripts/update-readme-version.js
          
          # Update installation instructions
          node scripts/update-installation-docs.js
          
          # Update feature list
          node scripts/update-feature-list.js

      - name: Commit README updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git diff --staged --quiet || git commit -m "docs: update README [automated]"
          git push

  # Validate Documentation
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    needs: [update-api-docs, update-build-docs, update-changelog, update-readme]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install documentation tools
        run: |
          npm install -g markdown-link-check
          npm install -g markdownlint-cli

      - name: Check markdown links
        run: |
          find docs -name "*.md" -exec markdown-link-check {} \;

      - name: Lint markdown
        run: |
          markdownlint docs/**/*.md

      - name: Validate documentation structure
        run: |
          node scripts/validate-docs.js

      - name: Generate documentation report
        run: |
          node scripts/generate-docs-report.js > docs-report.md

      - name: Upload documentation report
        uses: actions/upload-artifact@v4
        with:
          name: docs-report
          path: docs-report.md
          retention-days: 30

  # Deploy Documentation
  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: [validate-docs]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build documentation site
        run: |
          cd docs
          npm ci
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build
          destination_dir: docs